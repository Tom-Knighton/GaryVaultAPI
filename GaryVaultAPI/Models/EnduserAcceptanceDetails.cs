/*
 * Nordigen Account Information Services API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Represents end-user details.
    /// </summary>
    [DataContract(Name = "EnduserAcceptanceDetails")]
    public partial class EnduserAcceptanceDetails : IEquatable<EnduserAcceptanceDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnduserAcceptanceDetails" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EnduserAcceptanceDetails() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EnduserAcceptanceDetails" /> class.
        /// </summary>
        /// <param name="userAgent">userAgent (required).</param>
        /// <param name="ipAddress">ipAddress (required).</param>
        public EnduserAcceptanceDetails(string userAgent = default(string), string ipAddress = default(string))
        {
            // to ensure "userAgent" is required (not null)
            if (userAgent == null) {
                throw new ArgumentNullException("userAgent is a required property for EnduserAcceptanceDetails and cannot be null");
            }
            this.UserAgent = userAgent;
            // to ensure "ipAddress" is required (not null)
            if (ipAddress == null) {
                throw new ArgumentNullException("ipAddress is a required property for EnduserAcceptanceDetails and cannot be null");
            }
            this.IpAddress = ipAddress;
        }

        /// <summary>
        /// Gets or Sets UserAgent
        /// </summary>
        [DataMember(Name = "user_agent", IsRequired = true, EmitDefaultValue = false)]
        public string UserAgent { get; set; }

        /// <summary>
        /// Gets or Sets IpAddress
        /// </summary>
        [DataMember(Name = "ip_address", IsRequired = true, EmitDefaultValue = false)]
        public string IpAddress { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EnduserAcceptanceDetails {\n");
            sb.Append("  UserAgent: ").Append(UserAgent).Append("\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EnduserAcceptanceDetails);
        }

        /// <summary>
        /// Returns true if EnduserAcceptanceDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of EnduserAcceptanceDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EnduserAcceptanceDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.UserAgent == input.UserAgent ||
                    (this.UserAgent != null &&
                    this.UserAgent.Equals(input.UserAgent))
                ) && 
                (
                    this.IpAddress == input.IpAddress ||
                    (this.IpAddress != null &&
                    this.IpAddress.Equals(input.IpAddress))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.UserAgent != null)
                {
                    hashCode = (hashCode * 59) + this.UserAgent.GetHashCode();
                }
                if (this.IpAddress != null)
                {
                    hashCode = (hashCode * 59) + this.IpAddress.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
